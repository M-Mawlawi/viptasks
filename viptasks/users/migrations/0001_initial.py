# Generated by Django 5.0 on 2023-12-14 12:38

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profession', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_country_code', models.CharField(choices=[('297', 'Aruba +297'), ('93', 'Afghanistan +93'), ('244', 'Angola +244'), ('1', 'Anguilla +1'), ('358', 'Åland Islands +358'), ('355', 'Albania +355'), ('376', 'Andorra +376'), ('971', 'United Arab Emirates +971'), ('54', 'Argentina +54'), ('374', 'Armenia +374'), ('1', 'American Samoa +1'), ('0', 'Antarctica +0'), ('0', 'French Southern Territories +0'), ('1', 'Antigua and Barbuda +1'), ('61', 'Australia +61'), ('43', 'Austria +43'), ('994', 'Azerbaijan +994'), ('257', 'Burundi +257'), ('32', 'Belgium +32'), ('229', 'Benin +229'), ('599', 'Bonaire, Sint Eustatius and Saba +599'), ('226', 'Burkina Faso +226'), ('880', 'Bangladesh +880'), ('359', 'Bulgaria +359'), ('973', 'Bahrain +973'), ('1', 'Bahamas +1'), ('387', 'Bosnia and Herzegovina +387'), ('590', 'Saint Barthélemy +590'), ('375', 'Belarus +375'), ('501', 'Belize +501'), ('1', 'Bermuda +1'), ('591', 'Bolivia, Plurinational State of +591'), ('55', 'Brazil +55'), ('1', 'Barbados +1'), ('673', 'Brunei Darussalam +673'), ('975', 'Bhutan +975'), ('0', 'Bouvet Island +0'), ('267', 'Botswana +267'), ('236', 'Central African Republic +236'), ('1', 'Canada +1'), ('61', 'Cocos (Keeling) Islands +61'), ('41', 'Switzerland +41'), ('56', 'Chile +56'), ('86', 'China +86'), ('225', "Côte d'Ivoire +225"), ('237', 'Cameroon +237'), ('243', 'Congo, The Democratic Republic of the +243'), ('242', 'Congo +242'), ('682', 'Cook Islands +682'), ('57', 'Colombia +57'), ('269', 'Comoros +269'), ('238', 'Cabo Verde +238'), ('506', 'Costa Rica +506'), ('53', 'Cuba +53'), ('599', 'Curaçao +599'), ('61', 'Christmas Island +61'), ('1', 'Cayman Islands +1'), ('357', 'Cyprus +357'), ('420', 'Czechia +420'), ('49', 'Germany +49'), ('253', 'Djibouti +253'), ('1', 'Dominica +1'), ('45', 'Denmark +45'), ('1', 'Dominican Republic +1'), ('213', 'Algeria +213'), ('593', 'Ecuador +593'), ('20', 'Egypt +20'), ('291', 'Eritrea +291'), ('212', 'Western Sahara +212'), ('34', 'Spain +34'), ('372', 'Estonia +372'), ('251', 'Ethiopia +251'), ('358', 'Finland +358'), ('679', 'Fiji +679'), ('500', 'Falkland Islands (Malvinas) +500'), ('33', 'France +33'), ('298', 'Faroe Islands +298'), ('691', 'Micronesia, Federated States of +691'), ('241', 'Gabon +241'), ('44', 'United Kingdom +44'), ('995', 'Georgia +995'), ('44', 'Guernsey +44'), ('233', 'Ghana +233'), ('350', 'Gibraltar +350'), ('224', 'Guinea +224'), ('590', 'Guadeloupe +590'), ('220', 'Gambia +220'), ('245', 'Guinea-Bissau +245'), ('240', 'Equatorial Guinea +240'), ('30', 'Greece +30'), ('1', 'Grenada +1'), ('299', 'Greenland +299'), ('502', 'Guatemala +502'), ('594', 'French Guiana +594'), ('1', 'Guam +1'), ('592', 'Guyana +592'), ('852', 'Hong Kong +852'), ('0', 'Heard Island and McDonald Islands +0'), ('504', 'Honduras +504'), ('385', 'Croatia +385'), ('509', 'Haiti +509'), ('36', 'Hungary +36'), ('62', 'Indonesia +62'), ('44', 'Isle of Man +44'), ('91', 'India +91'), ('246', 'British Indian Ocean Territory +246'), ('353', 'Ireland +353'), ('98', 'Iran, Islamic Republic of +98'), ('964', 'Iraq +964'), ('354', 'Iceland +354'), ('972', 'Israel +972'), ('39', 'Italy +39'), ('1', 'Jamaica +1'), ('44', 'Jersey +44'), ('962', 'Jordan +962'), ('81', 'Japan +81'), ('7', 'Kazakhstan +7'), ('254', 'Kenya +254'), ('996', 'Kyrgyzstan +996'), ('855', 'Cambodia +855'), ('686', 'Kiribati +686'), ('1', 'Saint Kitts and Nevis +1'), ('82', 'Korea, Republic of +82'), ('965', 'Kuwait +965'), ('856', "Lao People's Democratic Republic +856"), ('961', 'Lebanon +961'), ('231', 'Liberia +231'), ('218', 'Libya +218'), ('1', 'Saint Lucia +1'), ('423', 'Liechtenstein +423'), ('94', 'Sri Lanka +94'), ('266', 'Lesotho +266'), ('370', 'Lithuania +370'), ('352', 'Luxembourg +352'), ('371', 'Latvia +371'), ('853', 'Macao +853'), ('590', 'Saint Martin (French part) +590'), ('212', 'Morocco +212'), ('377', 'Monaco +377'), ('373', 'Moldova, Republic of +373'), ('261', 'Madagascar +261'), ('960', 'Maldives +960'), ('52', 'Mexico +52'), ('692', 'Marshall Islands +692'), ('389', 'North Macedonia +389'), ('223', 'Mali +223'), ('356', 'Malta +356'), ('95', 'Myanmar +95'), ('382', 'Montenegro +382'), ('976', 'Mongolia +976'), ('1', 'Northern Mariana Islands +1'), ('258', 'Mozambique +258'), ('222', 'Mauritania +222'), ('1', 'Montserrat +1'), ('596', 'Martinique +596'), ('230', 'Mauritius +230'), ('265', 'Malawi +265'), ('60', 'Malaysia +60'), ('262', 'Mayotte +262'), ('264', 'Namibia +264'), ('687', 'New Caledonia +687'), ('227', 'Niger +227'), ('672', 'Norfolk Island +672'), ('234', 'Nigeria +234'), ('505', 'Nicaragua +505'), ('683', 'Niue +683'), ('31', 'Netherlands +31'), ('47', 'Norway +47'), ('977', 'Nepal +977'), ('674', 'Nauru +674'), ('64', 'New Zealand +64'), ('968', 'Oman +968'), ('92', 'Pakistan +92'), ('507', 'Panama +507'), ('0', 'Pitcairn +0'), ('51', 'Peru +51'), ('63', 'Philippines +63'), ('680', 'Palau +680'), ('675', 'Papua New Guinea +675'), ('48', 'Poland +48'), ('1', 'Puerto Rico +1'), ('850', "Korea, Democratic People's Republic of +850"), ('351', 'Portugal +351'), ('595', 'Paraguay +595'), ('970', 'Palestine, State of +970'), ('689', 'French Polynesia +689'), ('974', 'Qatar +974'), ('262', 'Réunion +262'), ('40', 'Romania +40'), ('7', 'Russian Federation +7'), ('250', 'Rwanda +250'), ('966', 'Saudi Arabia +966'), ('249', 'Sudan +249'), ('221', 'Senegal +221'), ('65', 'Singapore +65'), ('0', 'South Georgia and the South Sandwich Islands +0'), ('290', 'Saint Helena, Ascension and Tristan da Cunha +290'), ('47', 'Svalbard and Jan Mayen +47'), ('677', 'Solomon Islands +677'), ('232', 'Sierra Leone +232'), ('503', 'El Salvador +503'), ('378', 'San Marino +378'), ('252', 'Somalia +252'), ('508', 'Saint Pierre and Miquelon +508'), ('381', 'Serbia +381'), ('211', 'South Sudan +211'), ('239', 'Sao Tome and Principe +239'), ('597', 'Suriname +597'), ('421', 'Slovakia +421'), ('386', 'Slovenia +386'), ('46', 'Sweden +46'), ('268', 'Eswatini +268'), ('1', 'Sint Maarten (Dutch part) +1'), ('248', 'Seychelles +248'), ('963', 'Syrian Arab Republic +963'), ('1', 'Turks and Caicos Islands +1'), ('235', 'Chad +235'), ('228', 'Togo +228'), ('66', 'Thailand +66'), ('992', 'Tajikistan +992'), ('690', 'Tokelau +690'), ('993', 'Turkmenistan +993'), ('670', 'Timor-Leste +670'), ('676', 'Tonga +676'), ('1', 'Trinidad and Tobago +1'), ('216', 'Tunisia +216'), ('90', 'Turkey +90'), ('688', 'Tuvalu +688'), ('886', 'Taiwan, Province of China +886'), ('255', 'Tanzania, United Republic of +255'), ('256', 'Uganda +256'), ('380', 'Ukraine +380'), ('0', 'United States Minor Outlying Islands +0'), ('598', 'Uruguay +598'), ('1', 'United States +1'), ('998', 'Uzbekistan +998'), ('39', 'Holy See (Vatican City State) +39'), ('1', 'Saint Vincent and the Grenadines +1'), ('58', 'Venezuela, Bolivarian Republic of +58'), ('1', 'Virgin Islands, British +1'), ('1', 'Virgin Islands, U.S. +1'), ('84', 'Viet Nam +84'), ('678', 'Vanuatu +678'), ('681', 'Wallis and Futuna +681'), ('685', 'Samoa +685'), ('967', 'Yemen +967'), ('27', 'South Africa +27'), ('260', 'Zambia +260'), ('263', 'Zimbabwe +263')], max_length=120)),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '999999999'. Up to 15 digits allowed.", regex='^\\d{9,15}$')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('firstname', models.CharField(default='x', max_length=50)),
                ('lastname', models.CharField(default='x', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('street', models.CharField(max_length=255)),
                ('number', models.CharField(max_length=10)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zip', models.CharField(max_length=5)),
                ('is_primary', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfilePhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_photo', models.ImageField(default='static/img/profil_images/blank-profile.webp', upload_to='static/img/profile_images')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
